
// --- C:\Api\Riguchi\riguchi\src\App.js ---
import React, { useState, useEffect } from 'react';
import { Helmet } from 'react-helmet';
import { motion, AnimatePresence } from 'framer-motion';
import Navbar from './components/Navbar';
import Hero from './components/Hero';
import About from './components/About';
import Skills from './components/Skills';
import Experience from './components/Experience';
import Certifications from './components/Certifications';
import Resume from './components/Resume';
import Contact from './components/Contact';
import LoadingAnimation from './components/LoadingAnimation';

function App() {
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    // Simulate loading time
    const timer = setTimeout(() => {
      setLoading(false);
    }, 2000); // 2 seconds loading time

    return () => clearTimeout(timer);
  }, []);

  return (
    <AnimatePresence>
      {loading ? (
        <LoadingAnimation key="loading" />
      ) : (
        <motion.div
          key="content"
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          exit={{ opacity: 0 }}
          transition={{ duration: 0.5 }}
          className="min-h-screen relative font-sans"
        >
          <Helmet>
            <title>Ryan Iguchi - Product Manager & Software Engineer</title>
            <meta name="description" content="Portfolio of Ryan Iguchi, a Product Manager and Software Engineer with over a decade of experience in bridging technical expertise and business strategy." />
            <meta name="theme-color" content="#4077E3" />
            <link href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@300;400;500;600;700&family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet" />
          </Helmet>
          
          {/* Content overlay with slight darkening for better text readability */}
          <div className="relative z-10 min-h-screen bg-black/20">
            <Navbar />
            <Hero />
            <About />
            <Skills />
            <Experience />
            <Certifications />
            <Resume />
            <Contact />
          </div>
        </motion.div>
      )}
    </AnimatePresence>
  );
}

export default App;




// --- C:\Api\Riguchi\riguchi\src\components\About.js ---
import React from "react";
import { motion } from "framer-motion";
import { Diamond, Shield, Code, Users, Globe } from "lucide-react";

// Reusable animations
const variants = {
  hidden: { opacity: 0, y: 20 },
  visible: { opacity: 1, y: 0 },
};

const transition = { duration: 0.5 };

// Reusable ListItem component
const ListItem = ({ icon, text, delay }) => (
  <motion.li
    className="flex items-center space-x-3"
    variants={variants}
    initial="hidden"
    whileInView="visible"
    viewport={{ once: true, amount: 0.5 }}
    transition={{ duration: 0.5, delay }}
  >
    {icon}
    <span className="text-lg font-medium text-white/80 font-inter">{text}</span>
  </motion.li>
);

function About() {
  return (
    <section id="about" className="py-20 px-6 font-poppins">
      <div className="max-w-6xl mx-auto">
        <motion.h2
          variants={variants}
          initial="hidden"
          whileInView="visible"
          viewport={{ once: true, amount: 0.5 }}
          transition={transition}
          className="text-4xl md:text-5xl font-bold mb-12 text-center font-space-grotesk"
          style={{
            background: "linear-gradient(to right, #4077E3, #1DC177)",
            WebkitBackgroundClip: "text",
            backgroundClip: "text",
            color: "transparent",
          }}
        >
          About Me
        </motion.h2>

        <motion.div
          variants={variants}
          initial="hidden"
          whileInView="visible"
          viewport={{ once: true, amount: 0.5 }}
          transition={{ ...transition, delay: 0.2 }}
          className="space-y-8 text-base md:text-lg text-white/80 font-inter"
        >
          <p className="leading-relaxed text-center text-lg md:text-xl font-inter">
            I'm{" "}
            <span
              className="font-bold text-xl md:text-2xl relative group transition-all duration-300 font-poppins"
              style={{
                background: "linear-gradient(to right, #4077E3, #1DC177)",
                WebkitBackgroundClip: "text",
                backgroundClip: "text",
                color: "transparent",
              }}
            >
              Ryan Iguchi
              <span
                className="absolute -bottom-1 left-0 w-0 h-0.5 bg-gradient-to-r from-[#FF6B6B] to-[#FFD700] group-hover:w-full transition-all duration-300"
              />
            </span>
            , a{" "}
            <span
              className="font-bold text-xl md:text-2xl relative group transition-all duration-300 font-poppins"
              style={{
                background: "linear-gradient(to right, #4077E3, #1DC177)",
                WebkitBackgroundClip: "text",
                backgroundClip: "text",
                color: "transparent",
              }}
            >
              Product Manager
              <span
                className="absolute -bottom-1 left-0 w-0 h-0.5 bg-gradient-to-r from-[#FF6B6B] to-[#FFD700] group-hover:w-full transition-all duration-300"
              />
            </span>{" "}
            and{" "}
            <span
              className="font-bold text-xl md:text-2xl relative group transition-all duration-300 font-poppins"
              style={{
                background: "linear-gradient(to right, #4077E3, #1DC177)",
                WebkitBackgroundClip: "text",
                backgroundClip: "text",
                color: "transparent",
              }}
            >
              Software Engineer
              <span
                className="absolute -bottom-1 left-0 w-0 h-0.5 bg-gradient-to-r from-[#FF6B6B] to-[#FFD700] group-hover:w-full transition-all duration-300"
              />
            </span>{" "}
            with over a decade of experience bridging technical expertise and
            business strategy. My journey began in 2010, experimenting with
            no-code solutions before diving deep into software development. This
            evolution has led me through roles spanning web development, IT
            leadership, and product management, giving me a unique perspective
            on building technology solutions.
          </p>

          <div className="space-y-6">
            <h4
              className="text-xl md:text-3xl font-semibold text-center font-space-grotesk"
              style={{
                background: "linear-gradient(to right, #4077E3, #1DC177)",
                WebkitBackgroundClip: "text",
                backgroundClip: "text",
                color: "transparent",
              }}
            >
              What I Specialize In
            </h4>
            <ul className="grid grid-cols-1 md:grid-cols-2 gap-6">
              {[
                "Technical Development: Full-stack engineering with Svelte, React, and Node.js",
                "Infrastructure & Security: DevOps, cloud architecture, and information security (CISSP Candidate)",
                "Project Leadership: Product lifecycle management and strategic planning",
                "Agile Practices: Certified Scrum Master (PSM) and Product Owner (PSPO)",
              ].map((item, index) => (
                <ListItem
                  key={index}
                  icon={<Diamond size={16} className="flex-shrink-0 text-[#FF6B6B]" />}
                  text={item}
                  delay={0.3 + index * 0.1}
                />
              ))}
            </ul>
          </div>

          <div className="space-y-8">
            <p className="leading-relaxed text-center font-inter">
              I specialize in transforming complex technical challenges into
              elegant, user-centric solutions. My approach combines robust
              engineering practices with strategic business thinking, ensuring
              products are not just well-built but also deliver measurable value
              to users and businesses alike.
            </p>
          </div>

          <div className="space-y-6">
            <h4
              className="text-xl md:text-3xl font-semibold text-center font-space-grotesk"
              style={{
                background: "linear-gradient(to right, #4077E3, #1DC177)",
                WebkitBackgroundClip: "text",
                backgroundClip: "text",
                color: "transparent",
              }}
            >
              Beyond my professional work:
            </h4>
            <ul className="grid grid-cols-1 md:grid-cols-2 gap-6">
              {[
                {
                  icon: <Shield size={24} className="text-[#FF6B6B]" />,
                  text: "I'm deeply passionate about cybersecurity.",
                },
                {
                  icon: <Code size={24} className="text-[#FF6B6B]" />,
                  text: "I actively contribute to open-source projects.",
                },
                {
                  icon: <Users size={24} className="text-[#FF6B6B]" />,
                  text: "I enjoy mentoring the next generation of tech leaders.",
                },
                {
                  icon: <Globe size={24} className="text-[#FF6B6B]" />,
                  text: "I explore global tech trends and innovations.",
                },
              ].map((item, index) => (
                <ListItem
                  key={index}
                  icon={item.icon}
                  text={item.text}
                  delay={0.3 + index * 0.1}
                />
              ))}
            </ul>
          </div>

          <p className="leading-relaxed text-center font-inter">
            Currently, I'm focused on building innovative solutions in the
            construction technology space, where I'm excited to tackle new
            challenges that push the boundaries of what's possible.
          </p>
        </motion.div>
      </div>
    </section>
  );
}

export default About;


// --- C:\Api\Riguchi\riguchi\src\components\Certifications.js ---
import React from 'react';
import { motion } from 'framer-motion';
import { useInView } from 'react-intersection-observer';

function Certifications() {
  const certifications = [
    {
      title: "Professional Scrum Master (PSM)",
      issuer: "Scrum.org",
      date: "Mar 2024",
      color: "from-pink-500 to-purple-500"
    },
    {
      title: "Professional Scrum Product Owner (PSPO)",
      issuer: "Scrum.org",
      date: "Apr 2024",
      color: "from-purple-500 to-indigo-500"
    },

    {
      title: "Cybersecurity Professional",
      issuer: "Cal State Long Beach",
      date: "Aug 2023",
      color: "from-blue-500 to-teal-500"
    },
    {
      title: "Security+ Certified",
      issuer: "CompTIA",
      date: "May 2024",
      color: "from-teal-500 to-green-500"
    },
    {
      title: "Cybersecurity, Identity & Compliance",
      issuer: "Microsoft",
      date: "Dec 2023",
      color: "from-green-500 to-yellow-500"
    },
    {
      title: "Certified in Cybersecurity (CC)",
      issuer: "ISC2",
      date: "Sept 2023",
      color: "from-indigo-500 to-blue-500"
    },
  ];

  return (
    <section id="certifications" className="py-20 px-6">
      <div className="max-w-6xl mx-auto">
        <motion.h2
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.5 }}
          className="text-5xl font-bold mb-12 text-center bg-gradient-to-r from-[#4077E3] to-[#1DC177] bg-clip-text text-transparent font-['Space_Grotesk']"
        >
          Certifications
        </motion.h2>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {certifications.map((certification, index) => (
            <CertificationCard key={index} {...certification} index={index} />
          ))}
        </div>
      </div>
    </section>
  );
}

function CertificationCard({ title, issuer, date, color, index }) {
  const [ref, inView] = useInView({
    triggerOnce: false,
    threshold: 0.1,
  });

  return (
    <motion.div
      ref={ref}
      initial={{ opacity: 0, y: 50 }}
      animate={inView ? { opacity: 1, y: 0 } : {}}
      transition={{ duration: 0.5, delay: index * 0.1 }}
      className={`bg-white/5 backdrop-blur-sm p-6 rounded-lg hover:bg-white/10 transition-colors duration-300 border border-transparent hover:border-${color.split(' ')[1]} group`}
    >
      <h3 className={`text-2xl font-bold mb-2 bg-gradient-to-r ${color} bg-clip-text text-transparent font-['Space_Grotesk']`}>{title}</h3>
      <p className="text-white/80 font-['Inter']">{issuer}</p>
      <p className="text-white/60 font-['Inter']">{date}</p>
      <div className={`w-0 group-hover:w-full h-1 bg-gradient-to-r ${color} transition-all duration-300 mt-4`} />
    </motion.div>
  );
}

export default Certifications;




// --- C:\Api\Riguchi\riguchi\src\components\Contact.js ---
import React from 'react';
import { motion } from 'framer-motion';
import { FaLinkedin, FaGithub, FaEnvelope } from 'react-icons/fa';

function Contact() {
  return (
    <section id="contact" className="py-20 px-6 text-center">
      <motion.h2
        initial={{ opacity: 0 }}
        whileInView={{ opacity: 1 }}
        className="text-5xl font-bold mb-6 text-center bg-gradient-to-r from-[#4077E3] to-[#1DC177] bg-clip-text text-transparent font-['Space_Grotesk']"
      >
        Let's Connect
      </motion.h2>
      <motion.p
        initial={{ opacity: 0 }}
        whileInView={{ opacity: 1 }}
        transition={{ delay: 0.2 }}
        className="mb-8 text-white/80 text-xl font-['Inter']"
      >
        I'm always open to new opportunities and collaborations.
        <br />
        Feel free to reach out and let's create something amazing together!
      </motion.p>
      <motion.div
        initial={{ opacity: 0 }}
        whileInView={{ opacity: 1 }}
        transition={{ delay: 0.4 }}
        className="flex justify-center gap-6"
      >
        <ContactButton href="https://www.linkedin.com/in/ryaniguchi/" icon={<FaLinkedin />} text="LinkedIn" />
        <ContactButton href="https://github.com/yourusername" icon={<FaGithub />} text="GitHub" />
        <ContactButton href="mailto:riguchijob@gmail.com" icon={<FaEnvelope />} text="Email" />
      </motion.div>
    </section>
  );
}

function ContactButton({ href, icon, text }) {
  return (
    <motion.a
      href={href}
      target="_blank"
      rel="noopener noreferrer"
      whileHover={{ scale: 1.05 }}
      whileTap={{ scale: 0.95 }}
      className="flex items-center gap-2 bg-gradient-to-r from-[#4077E3] to-[#1DC177] hover:from-[#3066D2] hover:to-[#1CAF66] text-white px-6 py-3 rounded-lg transition-colors font-['Inter']"
    >
      {icon}
      {text}
    </motion.a>
  );
}

export default Contact;




// --- C:\Api\Riguchi\riguchi\src\components\Experience.js ---
import React, { useRef } from 'react';
import { motion, useScroll, useTransform } from 'framer-motion';
import { useInView } from 'react-intersection-observer';
import { Calendar, Building2, Award, Briefcase } from 'lucide-react';

const experiences = [
  {
    title: "Senior Software Engineer",
    company: "Maria's Place",
    period: "Jan 2021 - Sep 2024",
    description: "Tech team leader focused on software development, integrating third-party APIs, AWS services, and microservices.",
    achievements: [
      "Implemented CI/CD pipelines and automated testing tools, improving deployment efficiency by 40%.",
      "Designed user-friendly interfaces using React.js, Angular, and Vue.js, increasing user engagement by 25%.",
      "Integrated machine learning models into applications, enhancing functionality and user experience.",
    ],
    color: "from-[#4077E3] to-[#1DC177]",
  },
  {
    title: "Web Application Developer",
    company: "Maria's Place",
    period: "Jul 2014 - Dec 2020",
    description: "Developed a membership-based website with 20K+ users, integrating eCommerce subscriptions and WMS APIs.",
    achievements: [
      "Built a ski resort management system using Ruby on Rails, reducing operational costs by 15%.",
      "Migrated DevOps to Private GitHub, improving code security and collaboration.",
      "Designed responsive and intuitive interfaces using React.js and Vue.js.",
    ],
    color: "from-[#4077E3] to-[#1DC177]",
  },
  {
    title: "Game Developer",
    company: "Maria's Place",
    period: "Jul 2013 - Jun 2014",
    description: "Developed physical and digital therapeutic activity products, including mobile games.",
    achievements: [
      "Designed and developed 2 mobile games: Apple Catch and Smoothie Shack.",
      "Created wooden puzzles and bean bag games for therapeutic use.",
      "Focused on user experience and accessibility in game design.",
    ],
    color: "from-[#4077E3] to-[#1DC177]",
  },
  {
    title: "Software Engineer | Product Manager",
    company: "WordPress Superheroes",
    period: "Jan 2017 - Jul 2023",
    description: "Developed custom web apps for small businesses and led Agile teams as a Scrum Product Owner.",
    achievements: [
      "Designed and implemented a cloud-based solution using AWS services, reducing hosting costs by 30%.",
      "Promoted team skill development through technical education and mentorship.",
      "Improved client satisfaction by delivering projects on time and within budget.",
    ],
    color: "from-[#4077E3] to-[#1DC177]",
  },
  {
    title: "Digital Producer",
    company: "ULFBUILT",
    period: "Jan 2012 - Jun 2013",
    description: "Managed ad purchasing, real estate photography, and developed a home builder website with a highly creative UX.",
    achievements: [
      "Tailored ad campaigns using YP, Dex, Bing, Yahoo, and Google, increasing lead generation by 20%.",
      "Developed a visually appealing and user-friendly website for a home builder, enhancing customer engagement.",
      "Conducted indoor and outdoor real estate photography, improving property listings.",
    ],
    color: "from-[#4077E3] to-[#1DC177]",
  },
  {
    title: "Creative Director",
    company: "Prosper Studios",
    period: "Jan 2009 - Apr 2012",
    description: "Led mobile app and website development, managed SEO/SEM/SMO initiatives, and oversaw sales and marketing.",
    achievements: [
      "Created and led WordPress custom programming teams, delivering high-quality projects on time.",
      "Managed SEO, SEM, and SMO initiatives for SMB clients, increasing online visibility by 35%.",
      "Developed mobile apps and websites, improving client engagement and sales.",
    ],
    color: "from-[#4077E3] to-[#1DC177]",
  },
  {
    title: "Creative Director",
    company: "VailPM",
    period: "Jan 2006 - Apr 2012",
    description: "Created brand and marketing campaigns, planned promotional events, and managed trade show creative design.",
    achievements: [
      "Sold 3 franchises: BoulderPM, CaboPM, and HamptonsVibe, expanding the brand's reach.",
      "Designed and executed promotional events, increasing brand awareness by 40%.",
      "Produced affiliate materials and copywriting, enhancing marketing effectiveness.",
    ],
    color: "from-[#4077E3] to-[#1DC177]",
  },
  {
    title: "Brand Developer",
    company: "Vail Sitters",
    period: "Aug 2008 - Dec 2009",
    description: "Managed the brand lifecycle, created targeted advertising campaigns, and negotiated the sale of the company.",
    achievements: [
      "Built $88K in babysitting sales within 8 months through targeted advertising campaigns.",
      "Negotiated the successful sale of the company, achieving a profitable exit strategy.",
      "Managed ad buying for radio, TV, news, print, and internet, optimizing marketing spend.",
    ],
    color: "from-[#4077E3] to-[#1DC177]",
  },
  {
    title: "Creative Director",
    company: "Vail Pro Media",
    period: "Sep 2006 - Dec 2008",
    description: "Led client and team project management, spearheaded a Joomla custom programming team, and trained a luxury-oriented design team.",
    achievements: [
      "Managed marketing and sales initiatives, increasing revenue by 25%.",
      "Trained a team of designers to deliver high-quality, luxury-oriented designs.",
      "Spearheaded a Joomla custom programming team, delivering innovative solutions.",
    ],
    color: "from-[#4077E3] to-[#1DC177]",
  },
  {
    title: "Ecommerce Manager",
    company: "ScooterJones",
    period: "Jul 2005 - Jun 2008",
    description: "Managed eCommerce operations and marketing, developed the brand, and achieved a successful company acquisition.",
    achievements: [
      "Sold $1MM online over 3 years through effective eCommerce strategies.",
      "Managed web programming, SEO, and online ad campaigns, increasing traffic by 30%.",
      "Achieved a successful exit strategy with the acquisition of the company.",
    ],
    color: "from-[#4077E3] to-[#1DC177]",
  },
  {
    title: "Web App Developer",
    company: "Village Homes",
    period: "Jun 2002 - Jul 2006",
    description: "Developed rich media objects and a complete online home shopping process with thoughtful UX/UI design.",
    achievements: [
      "Built a seamless online home shopping experience, increasing customer satisfaction by 20%.",
      "Designed and implemented rich media objects, enhancing user engagement.",
      "Worked with AutoCad files to create marketing materials, improving sales conversions.",
    ],
    color: "from-[#4077E3] to-[#1DC177]",
  },
  {
    title: "Back End Developer",
    company: "Barnstorm Creative",
    period: "Jul 2003 - Jun 2005",
    description: "Built and led a $600K+/yr web development team, contributing to backend components and digital media projects.",
    achievements: [
      "Developed and maintained 4 web application projects, improving system efficiency by 15%.",
      "Led a 5-person digital media team, delivering high-quality projects on time.",
      "Contributed to the development of 10 backend components using JavaScript and Python.",
    ],
    color: "from-[#4077E3] to-[#1DC177]",
  },
  {
    title: "Assistant Marketing Manager",
    company: "Sierra Construction",
    period: "Jan 2003 - Jun 2003",
    description: "Designed and produced identity and print materials for residential communities, including luxury brochures and 3D renderings.",
    achievements: [
      "Created photorealistic 3D renderings and floor plans, improving marketing effectiveness.",
      "Worked with AutoCad files to produce high-quality marketing materials.",
      "Collaborated with master community marketing teams to enhance brand visibility.",
    ],
    color: "from-[#4077E3] to-[#1DC177]",
  },
  {
    title: "Frontend Web Programmer",
    company: "American Standard Brands",
    period: "Nov 2000 - Jun 2002",
    description: "Built and managed a multilingual website with interactive web objects and eCommerce programming.",
    achievements: [
      "Developed a 100+ page website in 7 languages, increasing global reach.",
      "Produced animations for TV commercials, enhancing brand visibility.",
      "Designed GUI for touch screens, improving user interaction.",
    ],
    color: "from-[#4077E3] to-[#1DC177]",
  },
  {
    title: "Web Programmer, API Programmer & Email Marketing",
    company: "Boulder Studios",
    period: "Jan 1999 - Dec 2000",
    description: "Developed real estate websites, eCommerce solutions, and managed email marketing campaigns.",
    achievements: [
      "Integrated multiple MLS systems, improving data accuracy and accessibility.",
      "Developed a custom ASP site with full checkout functionality, increasing sales by 20%.",
      "Managed email marketing campaigns, improving customer engagement.",
    ],
    color: "from-[#4077E3] to-[#1DC177]",
  },
];

function Experience() {
  const containerRef = useRef(null);
  const { scrollYProgress } = useScroll({
    target: containerRef,
    offset: ["start end", "end start"]
  });

  return (
    <section id="experience" className="py-20 px-6 relative">
      <div className="max-w-4xl mx-auto">
        <h2 className="text-4xl md:text-5xl font-bold mb-12 text-center bg-gradient-to-r from-[#4077E3] to-[#1DC177] bg-clip-text text-transparent font-['Space_Grotesk']">
          Work Experience
        </h2>
        <div ref={containerRef} className="relative space-y-6">
          {experiences.map((experience, index) => (
            <ExperienceCard
              key={index}
              {...experience}
              index={index}
              progress={scrollYProgress}
              totalExperiences={experiences.length}
            />
          ))}
        </div>
      </div>
    </section>
  );
}

function ExperienceCard({ title, company, period, description, achievements, index, progress }) {
  const [ref, inView] = useInView({
    triggerOnce: false,
    threshold: 0.2,
  });

  return (
    <motion.div
      ref={ref}
      initial={{ opacity: 0, y: 20 }}
      whileInView={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.5 }}
      className="relative"
    >
      <div className="bg-white/5 backdrop-blur-sm rounded-lg border border-white/10 hover:bg-white/10 transition-all duration-300 overflow-hidden">
        {/* Header Section */}
        <div className="p-6 border-b border-white/10">
          <div className="flex items-start justify-between gap-4">
            <div className="flex-grow">
              <h3 className="text-xl font-bold bg-gradient-to-r from-[#4077E3] to-[#1DC177] bg-clip-text text-transparent font-['Space_Grotesk'] mb-2">
                {title}
              </h3>
              <div className="flex flex-wrap gap-4 text-sm text-white/60">
                <div className="flex items-center gap-1">
                  <Building2 className="w-4 h-4" />
                  <span>{company}</span>
                </div>
                <div className="flex items-center gap-1">
                  <Calendar className="w-4 h-4" />
                  <span>{period}</span>
                </div>
              </div>
            </div>
            <div className="w-12 h-12 rounded-full bg-white/10 flex items-center justify-center">
              <Briefcase className="w-6 h-6 text-[#4077E3]" />
            </div>
          </div>
          <p className="mt-4 text-white/80 text-sm">{description}</p>
        </div>

        {/* Achievements Section */}
        <div className="p-6 bg-gradient-to-br from-[#FF6B6B]/10 to-[#4ECDC4]/10">
          <div className="flex items-center gap-2 mb-3">
            <Award className="w-4 h-4 text-[#FF6B6B]" />
            <span className="font-semibold text-sm bg-gradient-to-r from-[#FF6B6B] to-[#4ECDC4] bg-clip-text text-transparent">Key Achievements</span>
          </div>
          <ul className="space-y-2">
            {achievements.map((achievement, i) => (
              <motion.li
                key={i}
                initial={{ opacity: 0, x: -20 }}
                animate={inView ? { opacity: 1, x: 0 } : {}}
                transition={{ duration: 0.3, delay: i * 0.1 }}
                className="flex items-start gap-2 text-sm"
              >
                <span className="text-[#FF6B6B] flex-shrink-0 mt-1">•</span>
                <span className="text-white/80">{achievement}</span>
              </motion.li>
            ))}
          </ul>
        </div>
      </div>

      {/* Connection Line */}
      {index < experiences.length - 1 && (
        <div className="absolute left-1/2 bottom-0 w-px h-6 bg-gradient-to-b from-[#4077E3] to-[#1DC177] transform translate-y-full" />
      )}
    </motion.div>
  );
}

export default Experience;




// --- C:\Api\Riguchi\riguchi\src\components\Hero.js ---
import React from 'react';
import { motion } from 'framer-motion';
import { FaGithub, FaLinkedin, FaEnvelope } from 'react-icons/fa';

function Hero() {
  const fadeInUp = {
    initial: { opacity: 0, y: 20 },
    animate: { opacity: 1, y: 0 },
  };

  const gradients = [
    'from-[#FF007F] to-[#FF6B6B]', // Hot Pink to Coral
    'from-[#FFD700] to-[#FF69B4]', // Gold to Hot Pink
    'from-[#00FF7F] to-[#00FFFF]', // Spring Green to Cyan
    'from-[#FF1493] to-[#FF8C00]', // Deep Pink to Dark Orange
    'from-[#00BFFF] to-[#00FA9A]', // Deep Sky Blue to Medium Spring Green
    'from-[#FF00FF] to-[#FFA500]', // Magenta to Orange
    'from-[#8A2BE2] to-[#FF69B4]', // Blue Violet to Hot Pink
    'from-[#32CD32] to-[#00FFFF]', // Lime Green to Cyan
    'from-[#FF6347] to-[#FFD700]', // Tomato to Gold
    'from-[#7B68EE] to-[#FF00FF]', // Medium Slate Blue to Magenta
    'from-[#FFD700] to-[#FF1493]', // Gold to Deep Pink
    'from-[#00FF00] to-[#00BFFF]', // Lime to Deep Sky Blue
    'from-[#FF69B4] to-[#FF4500]', // Hot Pink to Orange Red
    'from-[#00CED1] to-[#FF007F]', // Turquoise to Hot Pink
    'from-[#FF8C00] to-[#8A2BE2]', // Dark Orange to Blue Violet
    'from-[#FF00FF] to-[#00FF7F]', // Magenta to Spring Green
    'from-[#FFD700] to-[#00CED1]', // Gold to Turquoise
    'from-[#FF1493] to-[#00BFFF]', // Deep Pink to Deep Sky Blue
    'from-[#FF4500] to-[#7B68EE]', // Orange Red to Medium Slate Blue
    'from-[#00FF00] to-[#FF007F]', // Lime to Hot Pink
    'from-[#FF69B4] to-[#00FF7F]', // Hot Pink to Spring Green
    'from-[#8A2BE2] to-[#FFD700]', // Blue Violet to Gold
    'from-[#FF6347] to-[#00CED1]', // Tomato to Turquoise
    'from-[#FF00FF] to-[#FF4500]', // Magenta to Orange Red
    'from-[#00BFFF] to-[#FF1493]', // Deep Sky Blue to Deep Pink
    'from-[#FF007F] to-[#00FF7F]', // Hot Pink to Spring Green
    'from-[#FF8C00] to-[#00CED1]', // Dark Orange to Turquoise
    'from-[#FF00FF] to-[#00BFFF]', // Magenta to Deep Sky Blue
    'from-[#FF1493] to-[#00FF00]', // Deep Pink to Lime
    'from-[#FF4500] to-[#00FFFF]', // Orange Red to Cyan
  ];

  return (
    <div id="home" className="min-h-screen flex items-center justify-center px-6 pt-20">
      <div className="max-w-7xl w-full flex flex-col md:flex-row items-center justify-between">
        <div className="flex-1 text-center md:text-left">
          <motion.p
            initial={fadeInUp.initial}
            animate={fadeInUp.animate}
            className="font-mono text-[#4077E3] text-xl mb-2"
          >
            Hey there! I'm-
          </motion.p>

          {/* Render the name with different gradients */}
          {gradients.map((gradient, index) => (
            <motion.h1
              key={index}
              initial={fadeInUp.initial}
              animate={fadeInUp.animate}
              transition={{ delay: 0.2 + index * 0.1 }}
              className={`text-6xl md:text-7xl font-bold mb-4 tracking-tight bg-gradient-to-r ${gradient} bg-clip-text text-transparent font-['Space_Grotesk'] cursor-default`}
              whileHover={{ scale: 1.05 }}
            >
              Ryan Iguchi.
            </motion.h1>
          ))}

          <motion.h2
            initial={fadeInUp.initial}
            animate={fadeInUp.animate}
            transition={{ delay: 0.4 + gradients.length * 0.1 }}
            className="text-2xl md:text-3xl text-white/80 font-medium mb-6 font-['Inter']"
          >
            Product Manager & Software Engineer
          </motion.h2>
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            transition={{ delay: 0.6 + gradients.length * 0.1 }}
            className="flex justify-center md:justify-start gap-4"
          >
            <SocialLink href="https://github.com" icon={<FaGithub />} label="GitHub" />
            <SocialLink href="https://www.linkedin.com/in/ryaniguchi/" icon={<FaLinkedin />} label="LinkedIn" />
            <SocialLink href="mailto:riguchijob@gmail.com" icon={<FaEnvelope />} label="Email" />
          </motion.div>
        </div>

        <motion.div
          initial={{ opacity: 0, x: 50 }}
          animate={{ opacity: 1, x: 0 }}
          transition={{ delay: 0.8 + gradients.length * 0.1 }}
          className="flex-1 flex justify-center md:justify-end mt-8 md:mt-0"
          whileHover={{ scale: 1.05 }}
        >
          <motion.div 
            className="relative group"
            whileHover={{ rotate: 5 }}
            transition={{ type: "spring", stiffness: 300, damping: 20 }}
          >
            <div className="absolute -inset-1 bg-gradient-to-r from-[#4077E3] to-[#1DC177] rounded-full blur opacity-75 group-hover:opacity-100 transition duration-1000 group-hover:duration-200 animate-tilt" />
            <img
              src="/profile-image.png"
              alt="Ryan Iguchi - Product Manager & Software Engineer"
              loading="lazy"
              onError={(e) => {
                e.target.src = '/fallback-image.png';
              }}
              className="relative w-64 h-64 md:w-96 md:h-96 rounded-full object-cover transition-transform duration-300 transform group-hover:scale-105"
            />
          </motion.div>
        </motion.div>
      </div>
    </div>
  );
}

function SocialLink({ href, icon, label }) {
  return (
    <motion.a
      href={href}
      target="_blank"
      rel="noopener noreferrer"
      aria-label={`Link to ${label}`}
      whileHover={{ scale: 1.1 }}
      whileTap={{ scale: 0.95 }}
      className="bg-white/10 p-3 rounded-full hover:bg-white/20 transition-colors text-white text-2xl backdrop-blur-sm"
    >
      {icon}
    </motion.a>
  );
}

export default Hero;


// --- C:\Api\Riguchi\riguchi\src\components\LoadingAnimation.js ---
import React from "react";
import { motion, AnimatePresence } from "framer-motion";

const LoadingAnimation = () => {
  const [sequence, setSequence] = React.useState(1);
  const name = [
    { letter: "R", isInitial: true },
    { letter: "y", isInitial: false },
    { letter: "a", isInitial: false },
    { letter: "n", isInitial: false },
    { letter: " ", isInitial: false, isSpace: true },
    { letter: "I", isInitial: true },
    { letter: "g", isInitial: false },
    { letter: "u", isInitial: false },
    { letter: "c", isInitial: false },
    { letter: "h", isInitial: false },
    { letter: "i", isInitial: false },
  ];

  React.useEffect(() => {
    const timers = [
      setTimeout(() => setSequence(2), 3000),
      setTimeout(() => setSequence(3), 5000),
    ];
    return () => timers.forEach((timer) => clearTimeout(timer));
  }, []);

  return (
    <div className="fixed inset-0 flex items-center justify-center overflow-hidden">
      {/* Gradient background */}
      <div className="absolute inset-0 bg-[linear-gradient(135deg,_#8B2FBE_0%,_#1E2F97_100%)]">
        <motion.div
          className="absolute inset-0 opacity-40"
          animate={{
            background: [
              "radial-gradient(circle at 20% 20%, rgba(139, 47, 190, 0.5) 0%, transparent 50%)",
              "radial-gradient(circle at 80% 80%, rgba(30, 47, 151, 0.5) 0%, transparent 50%)",
            ],
          }}
          transition={{ duration: 8, repeat: Infinity, ease: "easeInOut" }}
        />
      </div>

      {/* Content Container */}
      <div className="relative z-10 flex flex-col items-center">
        <AnimatePresence mode="wait">
          {sequence === 1 && (
            <motion.div
              className="flex flex-col items-center"
              exit={{ scale: 1.2, opacity: 0 }}
            >
              <div className="flex items-baseline">
                {name.map((char, index) => (
                  <motion.span
                    key={index}
                    className={`font-sans ${
                      char.isSpace
                        ? "mx-4"
                        : "text-7xl font-bold bg-gradient-to-r from-[#4077E3] to-[#1DC177] text-transparent bg-clip-text"
                    }`}
                    style={{
                      display: "inline-block",
                      textShadow: "none",
                      letterSpacing: "-0.03em",
                    }}
                    initial={{
                      opacity: 0,
                      y: char.isInitial ? -50 : 50,
                      scale: char.isInitial ? 1.2 : 1,
                    }}
                    animate={{
                      opacity: 1,
                      y: 0,
                      scale: 1,
                    }}
                    transition={{
                      duration: 0.5,
                      delay: index * 0.1,
                      type: "spring",
                      damping: 12,
                    }}
                  >
                    {char.letter}
                  </motion.span>
                ))}
              </div>

              {/* Title */}
              <motion.div
                className="text-xl text-white/80 mt-6 tracking-wide font-serif"
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ delay: 1.2 }}
              >
                Product Manager & Software Engineer
              </motion.div>
            </motion.div>
          )}

          {sequence >= 2 && (
            <motion.div
              className="flex flex-col items-center"
              initial={{ scale: 0.8, opacity: 0 }}
              animate={{ scale: 1, opacity: 1 }}
            >
              <div className="flex items-baseline">
                {name.map((char, index) => (
                  <motion.span
                    key={index}
                    className={`font-sans ${
                      char.isSpace
                        ? "mx-4"
                        : "text-7xl font-bold bg-gradient-to-r from-[#4077E3] to-[#1DC177] text-transparent bg-clip-text"
                    }`}
                    style={{
                      letterSpacing: "-0.03em",
                    }}
                  >
                    {char.letter}
                  </motion.span>
                ))}
              </div>

              <motion.div
                className="text-xl text-white/80 mt-6 tracking-wide font-serif"
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.3 }}
              >
                Product Manager & Software Engineer
              </motion.div>
            </motion.div>
          )}
        </AnimatePresence>

        {/* Dotted Loading Animation */}
        <div className="absolute bottom-10 flex gap-2">
          {[1, 2, 3, 4, 5].map((index) => (
            <motion.div
              key={index}
              className="w-2 h-2 bg-gradient-to-r from-[#4077E3] to-[#1DC177] rounded-full"
              animate={{
                y: ["0%", "-100%", "0%"],
                opacity: [0.3, 1, 0.3],
              }}
              transition={{
                duration: 1,
                repeat: Infinity,
                delay: index * 0.1,
                ease: "easeInOut",
              }}
            />
          ))}
        </div>
      </div>
    </div>
  );
};

export default LoadingAnimation;


// --- C:\Api\Riguchi\riguchi\src\components\Navbar.js ---
import React, { useState, useEffect, useCallback, useMemo } from "react";
import { motion, AnimatePresence } from "framer-motion";
import { ChevronUp, Home, User, Code, Briefcase, FileText, Mail, ExternalLink } from "lucide-react";

function Navbar() {
  const [isVisible, setIsVisible] = useState(true);
  const [lastScrollY, setLastScrollY] = useState(0);
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);

  const handleScroll = useCallback(() => {
    const currentScrollY = window.scrollY;
    setIsVisible(lastScrollY > currentScrollY || currentScrollY < 50);
    setLastScrollY(currentScrollY);
    setIsMobileMenuOpen(false);
  }, [lastScrollY]);

  useEffect(() => {
    window.addEventListener("scroll", handleScroll, { passive: true });
    return () => window.removeEventListener("scroll", handleScroll);
  }, [handleScroll]);

  const scrollToTop = () => {
    window.scrollTo({ top: 0, behavior: "smooth" });
  };

  const toggleMobileMenu = () => {
    setIsMobileMenuOpen(!isMobileMenuOpen);
  };

  const handleNavLinkClick = (e, href) => {
    e.preventDefault();
    const target = document.querySelector(href);
    if (target) {
      target.scrollIntoView({ behavior: "smooth" });
    }
  };

  const navItems = useMemo(
    () => [
      { name: "Home", icon: <Home size={18} />, href: "#home" },
      { name: "About", icon: <User size={18} />, href: "#about" },
      { name: "Skills", icon: <Code size={18} />, href: "#skills" },
      { name: "Experience", icon: <Briefcase size={18} />, href: "#experience" },
      { name: "Resume", icon: <FileText size={18} />, href: "#resume" },
      { name: "Contact", icon: <Mail size={18} />, href: "#contact" },
      {
        name: "NetDev",
        icon: <ExternalLink size={18} />,
        href: "https://netdevs.net/",
        isExternal: true,
      },
    ],
    []
  );

  return (
    <AnimatePresence>
      {isVisible && (
        <motion.nav
          initial={{ y: -100 }}
          animate={{ y: 0 }}
          exit={{ y: -100 }}
          transition={{ duration: 0.3 }}
          className="fixed w-full px-6 py-4 flex justify-between items-center bg-background/80 backdrop-blur-md z-50 border-b border-white/10"
        >
          <motion.div
            whileHover={{ scale: 1.1, rotate: 5 }}
            whileTap={{ scale: 0.95 }}
            onClick={scrollToTop}
            className="text-2xl font-bold bg-gradient-to-r from-[#4077E3] to-[#1DC177] bg-clip-text text-transparent cursor-pointer font-mono"
          >
            {"{RI}"}
          </motion.div>

          <div className="hidden md:flex gap-6">
            {navItems.map(({ name, icon, href, isExternal }) => (
              <NavLink
                key={name}
                href={href}
                isExternal={isExternal}
                onClick={toggleMobileMenu}
              >
                <span className="mr-2">{icon}</span>
                {name}
              </NavLink>
            ))}
          </div>

          <motion.button
            whileTap={{ scale: 0.95 }}
            onClick={toggleMobileMenu}
            className="md:hidden p-2 hover:bg-white/10 rounded-lg"
            aria-label="Toggle mobile menu"
          >
            <div className="w-6 h-0.5 bg-white mb-1.5" />
            <div className="w-6 h-0.5 bg-white mb-1.5" />
            <div className="w-6 h-0.5 bg-white" />
          </motion.button>

          {isMobileMenuOpen && (
            <motion.div
              initial={{ opacity: 0, y: -20 }}
              animate={{ opacity: 1, y: 0 }}
              exit={{ opacity: 0, y: -20 }}
              transition={{ duration: 0.3 }}
              className="md:hidden absolute top-16 right-6 bg-background/90 backdrop-blur-md rounded-lg p-4 border border-white/10"
            >
              {navItems.map(({ name, icon, href, isExternal }) => (
                <NavLink
                  key={name}
                  href={href}
                  isExternal={isExternal}
                  onClick={toggleMobileMenu}
                >
                  <span className="mr-2">{icon}</span>
                  {name}
                </NavLink>
              ))}
            </motion.div>
          )}
        </motion.nav>
      )}

      <motion.button
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: lastScrollY > 500 ? 1 : 0, y: lastScrollY > 500 ? 0 : 20 }}
        transition={{ type: "spring", stiffness: 300 }}
        onClick={scrollToTop}
        className="fixed bottom-8 right-8 p-3 bg-primary/80 hover:bg-primary backdrop-blur-sm rounded-full z-50 shadow-lg"
        aria-label="Scroll to top"
      >
        <ChevronUp className="w-6 h-6" />
      </motion.button>
    </AnimatePresence>
  );
}

function NavLink({ href, children, isExternal, onClick }) {
  return (
    <motion.a
      href={href}
      onClick={(e) => {
        if (!isExternal) {
          e.preventDefault();
          const target = document.querySelector(href);
          if (target) {
            target.scrollIntoView({ behavior: "smooth" });
          }
        }
        onClick?.();
      }}
      target={isExternal ? "_blank" : undefined}
      rel={isExternal ? "noopener noreferrer" : undefined}
      whileHover={{ scale: 1.1 }}
      className="relative font-medium text-white/80 hover:text-white transition-colors font-sans group flex items-center"
    >
      {children}
      <span className="absolute -bottom-1 left-0 w-0 h-0.5 bg-gradient-to-r from-pink-500 to-purple-500 group-hover:w-full transition-all duration-300" />
    </motion.a>
  );
}

export default Navbar;


// --- C:\Api\Riguchi\riguchi\src\components\Resume.js ---
import React from 'react';
import { motion } from 'framer-motion';
import { FileText, Download, Eye } from 'lucide-react';

const resumes = [
  {
    title: 'Software Engineer',
    description: 'Technical focus on web development and system architecture',
    file: '/RYAN IGUCHI_Software_Engineer.pdf'
  },
  {
    title: 'Product Manager',
    description: 'Emphasis on product strategy and team leadership',
    file: '/RYAN IGUCHI_Product_Manager.pdf'
  },
  {
    title: 'IT Support',
    description: 'Specializing in cybersecurity and enterprise IT infrastructure',
    file: '/RYAN IGUCHI_IT Support.pdf'
  }
];

function Resume() {
  return (
    <section id="resume" className="py-20 px-6 relative overflow-hidden">
      <div className="max-w-6xl mx-auto relative">
        <motion.h2
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.5 }}
          className="text-5xl font-bold mb-12 text-center bg-gradient-to-r from-[#4077E3] to-[#1DC177] bg-clip-text text-transparent font-['Space_Grotesk']"
        >
          My Resumes
        </motion.h2>

        <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
          {resumes.map((resume, index) => (
            <motion.div
              key={index}
              initial={{ opacity: 0, y: 50 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.5, delay: index * 0.2 }}
              className="bg-white/5 backdrop-blur-sm p-6 rounded-lg border border-white/10 hover:bg-white/10 transition-all duration-300"
            >
              <h3 className="text-2xl font-bold mb-2 text-white font-['Space_Grotesk']">{resume.title}</h3>
              <p className="text-white/80 mb-6 font-['Inter']">{resume.description}</p>
              
              <div className="flex gap-4">
                <motion.a
                  href={resume.file}
                  target="_blank"
                  rel="noopener noreferrer"
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                  className="flex items-center gap-2 bg-gradient-to-r from-[#4077E3] to-[#1DC177] hover:from-[#3066D2] hover:to-[#1CAF66] text-white px-4 py-2 rounded-lg transition-colors font-['Inter']"
                >
                  <Eye className="w-4 h-4" />
                  View
                </motion.a>
                
                <motion.a
                  href={resume.file}
                  download
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                  className="flex items-center gap-2 bg-white/10 hover:bg-white/20 text-white px-4 py-2 rounded-lg transition-colors font-['Inter']"
                >
                  <Download className="w-4 h-4" />
                  Download
                </motion.a>
              </div>
            </motion.div>
          ))}
        </div>
      </div>
    </section>
  );
}

export default Resume;




// --- C:\Api\Riguchi\riguchi\src\components\Skills.js ---
import React, { useState } from "react";
import { motion } from "framer-motion";
import { useInView } from "react-intersection-observer";
import {
  FaReact,
  FaJs,
  FaNodeJs,
  FaPython,
  FaProjectDiagram,
  FaShieldAlt,
  FaRobot,
  FaCss3,
  FaBootstrap,
  FaPhp,
  FaBrain, // Added for Reinforcement Learning
} from "react-icons/fa";
import {
  SiTypescript,
  SiSvelte,
  SiTailwindcss,
  SiNextdotjs,
  SiVuedotjs,
  SiGraphql,
  SiJira,
  SiTrello,
  SiSlack,
} from "react-icons/si";
import { GiNetworkBars, GiSpy } from "react-icons/gi";
import Lottie from "lottie-react";

function Skills() {
  const [activeCategory, setActiveCategory] = useState("technical");
  const [ref, inView] = useInView({
    triggerOnce: true, // Animations trigger only once
    threshold: 0.1,
  });

  const skills = {
    technical: [
      { name: "TypeScript", icon: <SiTypescript /> },
      { name: "React", icon: <FaReact /> },
      { name: "JavaScript", icon: <FaJs /> },
      { name: "Python", icon: <FaPython /> },
      { name: "Node.js", icon: <FaNodeJs /> },
      { name: "Svelte", icon: <SiSvelte /> },
      { name: "CSS3", icon: <FaCss3 /> },
      { name: "Bootstrap", icon: <FaBootstrap /> },
      { name: "Tailwind", icon: <SiTailwindcss /> },
      { name: "Next.js", icon: <SiNextdotjs /> },
      { name: "Vue.js", icon: <SiVuedotjs /> },
      { name: "PHP", icon: <FaPhp /> },
    ],
    product: [
      { name: "Technical Project Management", icon: <FaProjectDiagram /> },
      { name: "Product Strategy", icon: <FaProjectDiagram /> },
      { name: "Agile Methodology", icon: <SiJira /> },
      { name: "Scrum Master", icon: <SiTrello /> },
      { name: "Backlog Management", icon: <SiJira /> },
      { name: "User Research", icon: <FaProjectDiagram /> },
      { name: "Data Analysis", icon: <FaProjectDiagram /> },
      { name: "Stakeholder Communication", icon: <SiSlack /> },
      { name: "Brand Development", icon: <FaProjectDiagram /> },
    ],
    security: [
      { name: "SDLC", icon: <FaShieldAlt /> },
      { name: "DevOps", icon: <FaShieldAlt /> },
      { name: "Cloud Security", icon: <FaShieldAlt /> },
      { name: "Risk Management", icon: <FaShieldAlt /> },
      { name: "OWASP Top 10", icon: <FaShieldAlt /> },
      { name: "Network Security", icon: <GiNetworkBars /> },
      { name: "Reverse Engineering", icon: <GiSpy /> },
    ],
    ai: [
      { name: "AI Engineering", icon: <FaRobot /> },
      { name: "Prompt Engineering", icon: <FaRobot /> },
      { name: "RAG", icon: <FaRobot /> },
      { name: "LLM Integration", icon: <FaRobot /> },
      { name: "Graph Database", icon: <SiGraphql /> },
      { name: "Reinforcement Learning", icon: <FaBrain /> }, // Added Reinforcement Learning
    ],
  };

  const getBarColor = (category) => {
    switch (category) {
      case "technical":
        return { gradient: "from-blue-500 to-purple-500", iconColor: "text-blue-500" };
      case "product":
        return { gradient: "from-green-500 to-teal-500", iconColor: "text-green-500" };
      case "security":
        return { gradient: "from-red-500 to-orange-500", iconColor: "text-red-500" };
      case "ai":
        return { gradient: "from-pink-500 to-indigo-500", iconColor: "text-pink-500" };
      default:
        return { gradient: "from-pink-500 to-purple-500", iconColor: "text-pink-500" };
    }
  };

  return (
    <section id="skills" className="py-20 px-6 relative overflow-hidden">
      <div className="max-w-6xl mx-auto">
        <div className="flex flex-col md:flex-row items-center gap-12 mb-16">
          <motion.div
            ref={ref}
            initial={{ opacity: 0, x: -100 }}
            animate={inView ? { opacity: 1, x: 0 } : {}}
            transition={{ duration: 0.8, ease: "easeOut" }}
            className="md:w-1/2"
          >
            <h2 className="text-5xl font-bold mb-6 text-center md:text-left bg-gradient-to-r from-[#4077E3] to-[#1DC177] bg-clip-text text-transparent font-['Space_Grotesk']">
              Skills & Expertise
            </h2>
            <p className="text-lg text-white/80 text-center md:text-left font-['Inter']">
              With extensive experience in both product management and software engineering,
              I bring a unique blend of technical expertise and strategic thinking.
            </p>
          </motion.div>
          <motion.div
            initial={{ opacity: 0, scale: 0.8 }}
            animate={inView ? { opacity: 1, scale: 1 } : {}}
            transition={{ duration: 0.8, delay: 0.2 }}
            className="md:w-1/2 relative"
          >
            <Lottie
              path="/Animation1.json"
              loop={true}
              autoplay={true}
              className="w-full max-w-md mx-auto"
            />
            <div className="absolute inset-0 bg-gradient-to-t from-background via-transparent to-transparent" />
          </motion.div>
        </div>

        <div className="flex flex-wrap justify-center gap-4 mb-12">
          {Object.keys(skills).map((category) => (
            <motion.button
              key={category}
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
              onClick={() => setActiveCategory(category)}
              aria-pressed={activeCategory === category}
              className={`px-6 py-3 rounded-lg text-base md:text-lg font-semibold transition-all duration-300 font-['Inter'] ${
                activeCategory === category
                  ? "bg-gradient-to-r from-[#4077E3] to-[#1DC177] text-white"
                  : "bg-white/10 text-white/80 hover:bg-white/20"
              }`}
            >
              {category.charAt(0).toUpperCase() + category.slice(1)}
            </motion.button>
          ))}
        </div>

        <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
          {skills[activeCategory].map((skill, index) => (
            <SkillCard
              key={skill.name}
              name={skill.name}
              icon={skill.icon}
              index={index}
              barColor={getBarColor(activeCategory)}
            />
          ))}
        </div>
      </div>
    </section>
  );
}

function SkillCard({ name, icon, index, barColor }) {
  const [ref, inView] = useInView({
    triggerOnce: true, // Animations trigger only once
    threshold: 0.1,
  });

  return (
    <motion.div
      ref={ref}
      initial={{ opacity: 0, scale: 0.8 }}
      animate={inView ? { opacity: 1, scale: 1 } : { opacity: 0, scale: 0.8 }}
      whileHover={{ scale: 1.05 }}
      transition={{ duration: 0.3 }}
      className="group bg-white/5 backdrop-blur-sm p-6 rounded-lg border border-white/10 hover:border-pink-500/50 hover:bg-white/10 transition-all duration-300 flex flex-col justify-between h-full"
    >
      <div className="flex flex-col items-center text-center">
        <div className={`text-5xl ${barColor.iconColor} mb-4 group-hover:scale-110 transition-transform duration-300`}>
          {icon}
        </div>
        <h3 className="text-xl font-semibold text-white mb-2 font-['Space_Grotesk']">{name}</h3>
      </div>
      <div className="w-full bg-white/10 rounded-full h-2.5 overflow-hidden">
        <motion.div
          initial={{ width: 0 }}
          animate={inView ? { width: "100%" } : { width: 0 }}
          transition={{ duration: 1, delay: 0.5 + index * 0.1 }}
          className={`h-full bg-gradient-to-r ${barColor.gradient}`}
        />
      </div>
    </motion.div>
  );
}

export default Skills;


// --- C:\Api\Riguchi\riguchi\src\index.css ---
@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: #0f0f1a;
  --text: #ffffff;
  --accent: #4077E3;
  --secondary: #1DC177;
}

body {
  margin: 0;
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  background-color: var(--background);
  color: var(--text);
}

html {
  scroll-behavior: smooth;
}

* {
  box-sizing: border-box;
  scroll-behavior: smooth;
}

::-webkit-scrollbar {
  display: none;
}

* {
  -ms-overflow-style: none;
  scrollbar-width: none;
}

.text-purple-400 {
  --tw-text-opacity: 1;
  color: #b83280;
  color: rgb(184 50 128 / var(--tw-text-opacity));
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3), 2px -2px 4px rgba(0, 0, 0, 0.3), -2px 2px 4px rgba(0, 0, 0, 0.3), -2px -2px 4px rgba(0, 0, 0, 0.3);
}

.bg-gradient-primary {
  background: linear-gradient(135deg, var(--accent) 0%, var(--secondary) 100%);
}

.text-accent {
  color: var(--accent);
}

.bg-background-dark {
  background-color: rgba(15, 15, 26, 0.8);
}

.border-accent {
  border-color: var(--accent);
}

.hover\:bg-accent:hover {
  background-color: var(--accent);
}

.hover\:text-background:hover {
  color: var(--background);
}

.gradient-text {
  @apply bg-gradient-to-r from-[#4077E3] to-[#1DC177] bg-clip-text text-transparent;
}

.gradient-border {
  @apply border border-transparent bg-gradient-to-r from-[#4077E3] to-[#1DC177];
}

.glass-effect {
  @apply bg-white/10 backdrop-blur-md;
}

@media (max-width: 640px) {
  .text-6xl {
    font-size: 2.5rem;
  }
  
  .text-4xl {
    font-size: 2rem;
  }
  
  .px-6 {
    padding-left: 1rem;
    padding-right: 1rem;
  }
}

h1, h2, h3, h4, h5, h6 {
  font-family: 'Space Grotesk', sans-serif;
  font-weight: 700;
  letter-spacing: -0.02em;
}

p, a, button, input, textarea {
  font-family: 'Inter', sans-serif;
}

p {
  @apply leading-relaxed text-white/80;
}

:focus-visible {
  @apply outline-none ring-2 ring-pink-500 ring-offset-2 ring-offset-white;
}




// --- C:\Api\Riguchi\riguchi\src\index.js ---
import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';
import '@fortawesome/fontawesome-free/css/all.min.css';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);



